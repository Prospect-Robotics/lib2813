plugins {
    id 'java-common-conventions'
    id 'edu.wpi.first.GradleRIO' version '2025.1.1'
}

version = '1.0.0-alpha.1'

dependencies {
    implementation wpi.java.deps.wpilib()
    implementation wpi.java.vendor.java()
    implementation 'com.google.truth:truth:1.4.4'
    implementation(platform('org.junit:junit-bom:5.13.1'))
    implementation('org.junit.jupiter:junit-jupiter')
    nativeDebug wpi.java.deps.wpilibJniDebug(wpi.platforms.desktop)
    nativeDebug wpi.java.vendor.jniDebug(wpi.platforms.desktop)
    simulationDebug wpi.sim.enableDebug()

    nativeRelease wpi.java.deps.wpilibJniRelease(wpi.platforms.desktop)
    nativeRelease wpi.java.vendor.jniRelease(wpi.platforms.desktop)
    simulationRelease wpi.sim.enableRelease()

    testImplementation('org.junit.platform:junit-platform-testkit')
    testRuntimeOnly('org.junit.platform:junit-platform-launcher')
}

// the magic line that makes tests work :)
wpi.java.configureTestTasks(test)

tasks.named('test') {
    // Support running both JUnit Vintage and JUnit Jupiter tests
    useJUnitPlatform {
        excludeTags('ignore-outside-testkit')
    }
    systemProperty 'junit.jupiter.extensions.autodetection.enabled', 'true'
}

javadoc {
    options.tags = [
        // Converts `@apiNote` paragraph to "Note: " section in the generated javadoc
        'apiNote:a:Api Note:',
        // Converts `@implSpec` paragraph to "Implementation Requirements: " section in the generated javadoc
        'implSpec:a:Implementation Requirements:'
    ]
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}
