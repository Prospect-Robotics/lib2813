plugins {
    id 'java-common-conventions'
    id 'edu.wpi.first.GradleRIO' version '2025.1.1'
    id 'maven-publish'
}

version = '2.0.0-alpha.1'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        // WPI
        url 'https://frcmaven.wpi.edu/artifactory/release/'
    }
}

dependencies {
    implementation wpi.java.deps.wpilib()
    implementation wpi.java.vendor.java()

    nativeDebug wpi.java.deps.wpilibJniDebug(wpi.platforms.desktop)
    nativeDebug wpi.java.vendor.jniDebug(wpi.platforms.desktop)
    simulationDebug wpi.sim.enableDebug()

    nativeRelease wpi.java.deps.wpilibJniRelease(wpi.platforms.desktop)
    nativeRelease wpi.java.vendor.jniRelease(wpi.platforms.desktop)
    simulationRelease wpi.sim.enableRelease()

    testImplementation(platform('org.junit:junit-bom:5.13.1'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testRuntimeOnly('org.junit.platform:junit-platform-launcher')
    testRuntimeOnly('org.junit.vintage:junit-vintage-engine')
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.google.truth:truth:1.4.4'

    compileOnly 'com.google.auto.value:auto-value-annotations:1.11.0'
    annotationProcessor 'com.google.auto.value:auto-value:1.11.0'
}

// the magic line that makes tests work :)
wpi.java.configureTestTasks(test)

tasks.named('test') {
    // Support running both JUnit Vintage and JUnit Jupiter tests
    useJUnitPlatform()
    systemProperty 'junit.jupiter.extensions.autodetection.enabled', 'true'
}

javadoc {
    options.tags = [
        // Converts `@apiNote` paragraph to "Note: " section in the generated javadoc
        'apiNote:a:Api Note:',
        // Converts `@implSpec` paragraph to "Implementation Requirements: " section in the generated javadoc
        'implSpec:a:Implementation Requirements:'
    ]
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

publishing {
    publications {
        lib2813(MavenPublication) {
            groupId = 'com.team2813.lib2813'
            artifactId = 'lib2813'
            from components.java
            artifact sourceJar
            pom {
                name = '2813 Library'
                description = 'Frequently reused code written by team 2813'
                developers {
                    developer {
                        id = 'mango'
                        name = 'kyle'
                        email = 'mangoiscute95@gmail.com'
                    }
                }
                organization {
                    name = '2813 Gear Heads'
                    url = 'https://team2813.com'
                }
            }
        }
    }
}
