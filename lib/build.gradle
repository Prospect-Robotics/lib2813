/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'edu.wpi.first.GradleRIO' version '2025.3.1'
    id 'maven-publish'
    // Spotless code formatter.
    id 'com.diffplug.spotless' version '6.25.0'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType(JavaCompile) {
    // Configure string concat to always inline compile
    options.compilerArgs.add '-XDstringConcat=inline'
}

version = '1.2.0'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        // WPI
        url 'https://frcmaven.wpi.edu/artifactory/release/'
    }
}

dependencies {
    implementation wpi.java.deps.wpilib()
    implementation wpi.java.vendor.java()

    nativeDebug wpi.java.deps.wpilibJniDebug(wpi.platforms.desktop)
    nativeDebug wpi.java.vendor.jniDebug(wpi.platforms.desktop)
    simulationDebug wpi.sim.enableDebug()

    nativeRelease wpi.java.deps.wpilibJniRelease(wpi.platforms.desktop)
    nativeRelease wpi.java.vendor.jniRelease(wpi.platforms.desktop)
    simulationRelease wpi.sim.enableRelease()

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.google.truth:truth:1.4.4'
}

// the magic line that makes tests work :)
wpi.java.configureTestTasks(test)

tasks.named('test') {
    // Use JUnit 4 for unit tests.
    useJUnit()
}

tasks.named('jar') {
    manifest {
        attributes('Implementation-Title': project.name,
        'Implementation-Version': project.version)
    }
}

javadoc {
    options.tags = [
        'apiNote:a:Api Note:',
        'implSpec:a:Implementation Requirements:'
    ]
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

spotless {
    // See https://github.com/diffplug/spotless/tree/main/plugin-gradle
    format 'misc', {
        // define the files to apply `misc` to
        target '.gitattributes', '.gitignore'

        // define the steps to apply to those files
        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
    }
    groovyGradle {
        greclipse().configFile('greclipse-gradle.properties')
    }
    java {
        importOrder() // Use the default importOrder configuration (can override)
        removeUnusedImports()

        // Use Google Java Format
        // - aosp() causes it to use a four-space indent
        googleJavaFormat('1.24.0').reflowLongStrings()

        formatAnnotations()  // fix formatting of type annotations
    }
}

publishing {
    publications {
        lib2813(MavenPublication) {
            groupId = 'com.team2813.lib2813'
            artifactId = 'lib2813'
            from components.java
            artifact sourceJar
            pom {
                name = '2813 Library'
                description = 'Frequently reused code written by team 2813'
                developers {
                    developer {
                        id = 'mango'
                        name = 'kyle'
                        email = 'mangoiscute95@gmail.com'
                    }
                }
                organization {
                    name = '2813 Gear Heads'
                    url = 'https://team2813.com'
                }
            }
        }
    }
}
